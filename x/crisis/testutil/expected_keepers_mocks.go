// Code generated by MockGen. DO NOT EDIT.
// Source: x/crisis/types/expected_keepers.go

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockSupplyKeeper is a mock of SupplyKeeper interface.
type MockSupplyKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockSupplyKeeperMockRecorder
}

// MockSupplyKeeperMockRecorder is the mock recorder for MockSupplyKeeper.
type MockSupplyKeeperMockRecorder struct {
	mock *MockSupplyKeeper
}

// NewMockSupplyKeeper creates a new mock instance.
func NewMockSupplyKeeper(ctrl *gomock.Controller) *MockSupplyKeeper {
	mock := &MockSupplyKeeper{ctrl: ctrl}
	mock.recorder = &MockSupplyKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSupplyKeeper) EXPECT() *MockSupplyKeeperMockRecorder {
	return m.recorder
}

// GetBalance mocks base method.
func (m *MockSupplyKeeper) GetBalance(ctx types.Context, acc types.AccAddress, denom string) types.Coin {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", ctx, acc, denom)
	ret0, _ := ret[0].(types.Coin)
	return ret0
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockSupplyKeeperMockRecorder) GetBalance(ctx, acc, denom interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockSupplyKeeper)(nil).GetBalance), ctx, acc, denom)
}

// SendCoinsFromAccountToModule mocks base method.
func (m *MockSupplyKeeper) SendCoinsFromAccountToModule(ctx types.Context, senderAddr types.AccAddress, recipientModule string, amt types.Coins) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendCoinsFromAccountToModule", ctx, senderAddr, recipientModule, amt)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendCoinsFromAccountToModule indicates an expected call of SendCoinsFromAccountToModule.
func (mr *MockSupplyKeeperMockRecorder) SendCoinsFromAccountToModule(ctx, senderAddr, recipientModule, amt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendCoinsFromAccountToModule", reflect.TypeOf((*MockSupplyKeeper)(nil).SendCoinsFromAccountToModule), ctx, senderAddr, recipientModule, amt)
}
